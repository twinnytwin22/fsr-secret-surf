name: Build Frontend Production

on:
  push:
    branches:
      - production
    paths-ignore:
      - '*.md'
  pull_request:
    types: [opened, synchronize, reopened]
    branches:
      - production
    paths-ignore:
      - '*.md'

env:
  PROJECT: nft
  APP_NAME: travel-drop

jobs:
  license-check-npm:
    name: License check
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b # v2
        with:
          ref: ${{ env.CHECKOUT_REF }}

      - uses: actions/setup-node@cdcc53e14f65270996e107107b9a9f72862f58ee # v3.2.0
        with:
          node-version: '16'

      - name: Install dependencies
        run: |
          npm install -g license-checker
          yarn install --only=production
          license-checker --production --json \
          --excludePackages='treum-platform-frontend;big-integer;tweetnacl-util;uuid;pbjs'

  trivy-package-vuln-scan:
    name: Vulnerability scan
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b # v2
        with:
          fetch-depth: 0
          ref: ${{ env.CHECKOUT_REF }}

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@7b7aa264d83dc58691451798b4d117d53d21edfe # 0.2.5
        with:
          scan-type: 'fs'
          ignore-unfixed: true
          exit-code: '0' # set to 1 for build break
          format: 'table'
          severity: 'CRITICAL'
  build:
    name: Build Docker image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b # tag=v3
        with:
          fetch-depth: 0

      - name: Create context
        run: |
          docker context create ${{ env.APP_NAME }} --docker host=tcp://127.0.0.1:2375

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@dc7b9719a96d48369863986a06765841d7ea23f6 # v2

      - name: Build
        uses: docker/build-push-action@42863b1282f7046f6c1ec9222965bbceafae3bb8 #v3
        with:
          context: ./
          file: .//Dockerfile
          push: false
          load: true
          tags: ${{ env.APP_NAME }}:latest

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@7b7aa264d83dc58691451798b4d117d53d21edfe # 0.2.5
        with:
          image-ref: ${{ env.APP_NAME }}:latest
          format: 'table'
          exit-code: '0' # set to 1 for build break
          ignore-unfixed: true
          severity: 'CRITICAL,HIGH'

  push-to-registry:
    name: Push to Docker registry
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' }}
    environment: prd
    needs: build

    steps:
      - name: Checkout
        uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b #v3

      - name: Login to Azure Registry
        uses: docker/login-action@dd4fa0671be5250ee6f50aedf4cb05514abda2c7 #v1
        with:
          registry: ${{ secrets.AZURE_CONTAINER_REGISTRY }}
          username: ${{ secrets.AZURE_CLIENT_ID }}
          password: ${{ secrets.AZURE_CLIENT_SECRET }}

      - name: Make some vars for tagging
        run: |
          echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
          echo "current_date=$(date +%s)" >> $GITHUB_ENV

      - name: Build and push
        uses: docker/build-push-action@42863b1282f7046f6c1ec9222965bbceafae3bb8 #v3
        with:
          context: ./
          file: ./Dockerfile
          load: true
          tags: ${{ secrets.AZURE_CONTAINER_REGISTRY }}/${{ env.PROJECT }}/${{ env.APP_NAME }}:latest

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@7b7aa264d83dc58691451798b4d117d53d21edfe # 0.2.5
        with:
          image-ref: ${{ secrets.AZURE_CONTAINER_REGISTRY }}/${{ env.PROJECT }}/${{ env.APP_NAME }}:latest
          format: 'table'
          exit-code: '1' # set to 1 for build break
          ignore-unfixed: true
          severity: 'CRITICAL,HIGH'

      - name: push container
        run: |
          docker tag ${{ secrets.AZURE_CONTAINER_REGISTRY }}/${{ env.PROJECT }}/${{ env.APP_NAME }}:latest ${{ secrets.AZURE_CONTAINER_REGISTRY }}/${{ env.PROJECT }}/${{ env.APP_NAME }}:${{ env.current_date }}.${{ env.sha_short }}-prd
          docker push ${{ secrets.AZURE_CONTAINER_REGISTRY }}/${{ env.PROJECT }}/${{ env.APP_NAME }}:latest
          docker push ${{ secrets.AZURE_CONTAINER_REGISTRY }}/${{ env.PROJECT }}/${{ env.APP_NAME }}:${{ env.current_date }}.${{ env.sha_short }}-prd
